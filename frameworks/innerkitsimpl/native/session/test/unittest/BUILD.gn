# Copyright (c) 2022 Huawei Device Co., Ltd.
# Licensed under the Apache License, Version 2.0 (the "License");
# you may not use this file except in compliance with the License.
# You may obtain a copy of the License at
#
#     http://www.apache.org/licenses/LICENSE-2.0
#
# Unless required by applicable law or agreed to in writing, software
# distributed under the License is distributed on an "AS IS" BASIS,
# WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
# See the License for the specific language governing permissions and
# limitations under the License.
import("//build/test.gni")

module_output_path = "multimedia_avsession/session"

###############################################################################
config("module_private_config") {
  visibility = [ ":*" ]

  include_dirs = [
    "../../include/",
    "../../../../../../interfaces/innerkits/native/session/include/",
  ]
}

common_deps = [
  "//foundation/multimedia/avsession/frameworks/innerkitsimpl/native/session:avsession_client",
  "//third_party/googletest:gtest_main",
  "//utils/native/base:utils",
]

common_external_deps = [
  "ability_base:want",
  "ability_runtime:wantagent_innerkits",
  "hiviewdfx_hilog_native:libhilog",
  "input:libmmi-client",
  "ipc:ipc_core",
  "multimedia_image_standard:image_native",
  "samgr_standard:samgr_proxy",
]

ohos_unittest("AVSessionManagerTest") {
  module_out_path = module_output_path

  sources = [ "avsession_manager_test.cpp" ]

  configs = [ ":module_private_config" ]

  deps = common_deps

  external_deps = common_external_deps
}

ohos_unittest("AVSessionControllerTest") {
  module_out_path = module_output_path

  sources = [ "avsession_controller_test.cpp" ]

  configs = [ ":module_private_config" ]

  deps = common_deps

  external_deps = common_external_deps
}

ohos_unittest("AVPlaybackStateTest") {
  module_out_path = module_output_path

  sources = [ "avplayback_state_test.cpp" ]

  configs = [ ":module_private_config" ]

  deps = common_deps
}

ohos_unittest("AVSessionTest") {
  module_out_path = module_output_path

  sources = [ "avsession_test.cpp" ]

  configs = [ ":module_private_config" ]

  deps = common_deps

  external_deps = common_external_deps
}

###############################################################################
group("unittest") {
  testonly = true

  deps = [
    ":AVSessionManagerTest",
    ":AVSessionControllerTest",
    ":AVPlaybackStateTest",
    ":AVSessionTest",
  ]
}
###############################################################################