# Copyright (c) 2024 Huawei Device Co., Ltd.
# Licensed under the Apache License, Version 2.0 (the "License");
# you may not use this file except in complince with the License.
# You may obtain a copy of the License at
#
#     http://www.apache.org/licenses/LICENSE-2.0
#
# Unless required by applicable law or agreed to in writing, software
# distributed under the License is distributed on an "AS IS" BASIS,
# WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
# See the License for the specific language governing permissions and
# +limitations under the License.

import("//build/ohos.gni")
import("//build/ohos/ace/ace.gni")
import("../../castplus_cast_engine_part.gni")
import("../../config.gni")

ohos_shared_library("cj_multimedia_avsession_ffi") {
  branch_protector_ret = "pac_ret"
  sanitize = {
    cfi = true
    cfi_cross_dso = true
    debug = false
  }

  cflags = [
    "-fdata-sections",
    "-ffunction-sections",
    "-fvisibility=hidden",
  ]

  include_dirs = [
    "../native/session/include",
    "../../interfaces/inner_api/native/session/include",
    "../../utils/include",
    "include",
  ]

  sources = [
    "src/cj_avsession_callback.cpp",
    "src/cj_avsession_controller_callback.cpp",
    "src/cj_avsession_controller_ffi.cpp",
    "src/cj_avsession_controller_impl.cpp",
    "src/cj_avsession_ffi.cpp",
    "src/cj_avsession_impl.cpp",
    "src/cj_avsession_manager_ffi.cpp",
    "src/cj_avsession_manager_impl.cpp",
    "src/cj_avsession_media_description.cpp",
    "src/cj_avsession_utils.cpp",
  ]

  deps = [
    "../../utils:avsession_utils",
    "../common:avsession_common",
    "../native/session:avsession_client",
  ]

  external_deps = [
    "ability_base:base",
    "ability_base:want",
    "ability_base:zuri",
    "ability_runtime:ability_context_native",
    "ability_runtime:ability_manager",
    "ability_runtime:abilitykit_native",
    "ability_runtime:app_manager",
    "ability_runtime:napi_base_context",
    "ability_runtime:napi_common",
    "ability_runtime:wantagent_innerkits",
    "access_token:libtokenid_sdk",
    "audio_framework:audio_client",
    "bundle_framework:appexecfwk_base",
    "bundle_framework:appexecfwk_core",
    "c_utils:utils",
    "curl:curl_shared",
    "hilog:libhilog",
    "image_framework:cj_image_ffi",
    "image_framework:image",
    "image_framework:image_native",
    "input:libmmi-client",
    "ipc:ipc_single",
    "napi:ace_napi",
    "napi:cj_bind_ffi",
    "napi:cj_bind_native",
    "safwk:system_ability_fwk",
    "samgr:samgr_proxy",
  ]

  if (castplus_cast_engine_enable) {
    cflags += [ "-DCASTPLUS_CAST_ENGINE_ENABLE" ]
    sources += [
      "src/cj_avsession_cast_controller_callback.cpp",
      "src/cj_avsession_cast_controller_ffi.cpp",
      "src/cj_avsession_cast_controller_impl.cpp",
    ]
    deps += [ "../native/session:avsession_cast_client" ]
  }

  innerapi_tags = [ "platformsdk" ]
  part_name = "av_session"
  subsystem_name = "multimedia"
}
