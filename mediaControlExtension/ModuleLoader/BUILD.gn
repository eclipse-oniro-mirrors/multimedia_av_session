# Copyright (c) 2023 Huawei Device Co., Ltd.
# Licensed under the Apache License, Version 2.0 (the "License");
# you may not use this file except in compliance with the License.
# You may obtain a copy of the License at
#
#     http://www.apache.org/licenses/LICENSE-2.0
#
# Unless required by applicable law or agreed to in writing, software
# distributed under the License is distributed on an "AS IS" BASIS,
# WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
# See the License for the specific language governing permissions and
# limitations under the License.

import("//arkcompiler/ets_frontend/es2panda/es2abc_config.gni")
import("//build/ohos.gni")
import("//commonlibrary/memory_utils/purgeable_mem_config.gni")
import("//foundation/ability/ability_runtime/ability_runtime.gni")
import("//foundation/distributeddatamgr/relational_store/relational_store.gni")
import("//foundation/multimedia/av_session/mediaControlExtension.gni")

config("ability_config") {
  visibility = [ ":*" ]
  visibility += [
    "${ability_runtime_native_path}/ability/native/*",
    "${ability_runtime_test_path}/*",
    "${distributeddatamgr_path}/data_share/interfaces/inner_api/*",
    "${imf_path}/frameworks/kits/extension/*",
    "${print_fwk_path}/frameworks/kits/extension/*",
    "${user_file_service_innerkits_path}/file_access/*",
    "${wallpaper_mgr_path}/frameworks/kits/extension/*",
  ]
  include_dirs = [
    "${ability_runtime_path}/interfaces/kits/native/ability/native",
    "${ability_runtime_path}/interfaces/kits/native/ability/native/continuation/distributed",
    "${ability_runtime_path}/interfaces/kits/native/ability/native/continuation/kits",
    "${ability_runtime_path}/interfaces/kits/native/ability/native/continuation/remote_register_service",
    "${ability_runtime_path}/interfaces/kits/native/ability/native/distributed_ability_runtime",
    "${ability_runtime_path}/interfaces/kits/native/appkit/app",
    "${ability_runtime_innerkits_path}/app_manager/include/appmgr",
    "${ability_runtime_innerkits_path}/uri/include",
    "${ability_runtime_services_path}/abilitymgr/include",
    "${ability_runtime_path}/interfaces/kits/native/appkit/ability_runtime/app",
    "${ability_runtime_path}/interfaces/kits/native/appkit/app",
    "${form_fwk_path}/interfaces/kits/native/include",
    "${ability_runtime_path}/interfaces/kits/native/appkit/app",
    "//third_party/node/src",
    "${ability_runtime_innerkits_path}/ability_manager/include/continuation",
    "${ability_runtime_path}/interfaces/kits/native/appkit/app/task",
    "${ability_runtime_napi_path}/inner/napi_common",
    "${ability_runtime_napi_path}/featureAbility",
  ]

  cflags = []
  if (target_cpu == "arm") {
    cflags += [ "-DBINDER_IPC_32BIT" ]
  }
  defines = [ "AMS_LOG_TAG = \"Ability\"" ]
  if (target_cpu == "arm64") {
    defines += [ "_ARM64_" ]
  }

  if (target_cpu == "arm64") {
    defines += [ "APP_USE_ARM64" ]
  } else if (target_cpu == "arm") {
    defines += [ "APP_USE_ARM" ]
  }

  if (ability_runtime_graphics) {
    include_dirs += [ "${form_fwk_path}/interfaces/inner_api/include" ]
    defines += [ "SUPPORT_GRAPHICS" ]
  }
}

ohos_shared_library("media_control_extension") {
  include_dirs = [
    "${media_control_extension_path}/Interface",
    "${ability_runtime_path}/interfaces/kits/native/ability/native",
  ]

  sources = [
    "js_media_control_extension.cpp",
    "js_media_control_extension_context.cpp",
    "media_control_extension.cpp",
    "media_control_extension_context.cpp",
  ]

  deps = []

  external_deps = [
    "ability_base:want",
    "ability_runtime:ability_context_native",
    "ability_runtime:ability_manager",
    "ability_runtime:abilitykit_native",
    "ability_runtime:app_context",
    "ability_runtime:napi_common",
    "ability_runtime:runtime",
    "c_utils:utils",
    "hilog:libhilog",
    "hitrace:hitrace_meter",
    "ipc:ipc_napi_common",
    "napi:ace_napi",
  ]

  if (ability_runtime_graphics) {
    external_deps += [ "window_manager:libwm" ]
  }

  subsystem_name = "multimedia"
  part_name = "av_session"
}

ohos_shared_library("media_control_extension_module") {
  include_dirs = [ "${media_control_extension_path}/Interface" ]

  sources = [ "media_control_extension_module_loader.cpp" ]

  configs = [ ":ability_config" ]

  deps = [ ":media_control_extension" ]

  external_deps = [
    "ability_base:configuration",
    "ability_base:session_info",
    "ability_base:want",
    "ability_runtime:runtime",
    "bundle_framework:appexecfwk_core",
    "hilog:libhilog",
    "napi:ace_napi",
  ]

  relative_install_dir = "extensionability/"
  subsystem_name = "multimedia"
  part_name = "av_session"
}
